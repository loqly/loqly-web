"use strict";const i=async e=>{if(!e)throw new Error("API key is required");const t=window.location.href.includes("http://localhost")?"http://localhost:3000":"https://api.loqly.dev",s=await fetch(`${t}/v1/strings`,{method:"GET",headers:{Authorization:`Apikey ${e}`,"Content-Type":"application/json"}}),a=await s.json();if(!s.ok||a.error)throw new Error(a.error||"Something went wrong, please try again.");return a.strings?a.strings:{}};class o{constructor({apiKey:t,defaultLocale:s="en"}){this.apiKey=t,this._defaultLocale=s,this._locale=s,this._translations=null,this._translatableElements=[]}async init(){this._translations=await i(this.apiKey),this.cacheElements(),this.translateElements(this._translatableElements)}static async getTranslations(t){return await i(t)}t(t){var a,n,l,r;const s=((n=(a=this._translations)==null?void 0:a[t])==null?void 0:n[this._locale])||((r=(l=this._translations)==null?void 0:l[t])==null?void 0:r[this._defaultLocale]);return s||t}cacheElements(){this._translatableElements=Array.from(document.querySelectorAll("[data-t]"))}translateElements(t){t.forEach(s=>{const a=s.getAttribute("data-t");a&&(s.textContent=this.t(a))})}translatePage(){this._translatableElements.length||this.cacheElements(),this.translateElements(this._translatableElements)}updateLanguage(t){this._locale=t,this.translatePage()}get translations(){return this._translations}set translations(t){this._translations=t}get locale(){return this._locale}set locale(t){this.updateLanguage(t)}get defaultLocale(){return this._defaultLocale}set defaultLocale(t){this._defaultLocale=t}}module.exports=o;
